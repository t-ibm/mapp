apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-fluentd-aggregator-cm" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.fluentd.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: aggregator
data:
  fluentd.conf: |
    # Ignore fluentd own events
    <match fluent.**>
      @type null
    </match>

    @include fluentd-inputs.conf
    @include fluentd-output.conf
    {{- if .Values.fluentd.metrics.enabled }}
    @include metrics.conf
    {{- end }}
  fluentd-inputs.conf: |
    # TCP input to receive logs from
    {{- if .Values.fluentd.aggregator.port }}
    <source>
      @type forward
      bind 0.0.0.0
      port {{ .Values.fluentd.aggregator.port }}
      {{- if .Values.fluentd.tls.enabled }}
      <transport tls>
        ca_path /opt/bitnami/fluentd/certs/in_forward/ca.crt
        cert_path /opt/bitnami/fluentd/certs/in_forward/tls.crt
        private_key_path /opt/bitnami/fluentd/certs/in_forward/tls.key
        client_cert_auth true
      </transport>
      {{- end }}
    </source>
    {{- end }}

    # HTTP input for the liveness and readiness probes
    <source>
      @type http
      bind 0.0.0.0
      port 9880
    </source>
  fluentd-output.conf: |
    # Throw the healthcheck to the standard output
    <match fluentd.healthcheck>
      @type stdout
    </match>

    # Send the logs to the Elasticsearch aggregator
    {{- $global := . }}
    {{- $fullName := (include "common.names.fullname" .) }}
    {{- $domain := default "cluster.local" .Values.fluentd.clusterDomain }}
    {{- $port := .Values.elasticsearch.containerPorts.restAPI | int }}
    <match **>
      @type elasticsearch
      include_tag_key true
      {{ printf "host %s-elasticsearch.%s.svc.%s" $fullName $global.Release.Namespace $domain }}
      {{ printf "port %d" $port }}
      logstash_format true
      <buffer>
        @type file
        path /opt/bitnami/fluentd/logs/buffers/logs.buffer
        flush_thread_count 2
        flush_interval 5s
      </buffer>
    </match>
  metrics.conf: |
    # Prometheus Exporter Plugin
    # input plugin that exports metrics
    <source>
      @type prometheus
      port {{ .Values.fluentd.metrics.service.port }}
    </source>

    # input plugin that collects metrics from MonitorAgent
    <source>
      @type prometheus_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>

    # input plugin that collects metrics for output plugin
    <source>
      @type prometheus_output_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>
